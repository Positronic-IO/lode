#!/bin/bash

die()
{
    echo  "$@"
    exit 1;
}

os=$(uname)
start_time=
clean=
mode=tb

while [ "${1}" != "" ]; do
    parm=${1%%=*}
    arg=${1#*=}
    has_arg=
    if [ "${1}" != "${parm?}" ] ; then
        has_arg=1
    else
        arg=""
    fi

    case "${parm}" in
	--branch|-b)
	    tb_branch="$arg"
	    ;;
	--os)
	    os="$arg"
	    ;;
	--real)
	    start_time=`date -u '+%s'`
	    ;;
	--clean)
	    clean=1
	    ;;
	--mode)
	    mode="$arg"
	    ;;
        -*)
            die "Invalid option $1"
            ;;
        *)
            die "Invalid argument $1"
            ;;
    esac
    shift
done

case "$(uname)" in
    Darwin)
        OS="MacOSX"
        ;;
    Linux)
        OS="Linux"
        ;;
    CYGWIN*)
        OS="Cygwin"
        ;;
esac

echo "OS:${OS}"

if [ "${mode}" = "tb" ] ; then
    build_log="build.log.tmp"
else
    build_log="build.log"
fi

#rm -fr tempdir
#mkdir tempdir
rm -f build.log.tmp
rm -f build.log

R=0
if [ -f ${LODE_HOME?}/autogen.input.base ] ; then
    if [ ! -f autogen.input ] ; then
	cp ${LODE_HOME?}/autogen.input.base autogen.input
    elif [ ${LODE_HOME?}/autogen.input.base -nt autogen.input ] ; then
	cp ${LODE_HOME?}/autogen.input.base autogen.input
    fi
fi

if [ ! -f Makefile ] ; then
    ./autogen.sh 2>&1 | tee -a ${build_log}
    R=${PIPESTATUS[0]}

    if [ "$R" = "0" ] ; then
	touch config_host.mk
    fi
fi
if [ "$R" = "0" -a -f .clean_slave ] ; then
    make clean | tee -a ${build_log}
    rm .clean_slave
elif [ "$R" = "0" -a "$clean" = "1" ] ; then
    make clean | tee -a ${build_log}
fi

#if [ ${OS} = "Cygwin" ] ; then
#    export TMPDIR="$(cygpath -d $(pwd)/tempdir)"
#    export TMP="$(cygpath -d $(pwd)/tempdir)"
#    export TEMP="$(cygpath -d $(pwd)/tempdir)"
#else
#    export TMPDIR="cygpath -d $(pwd)/tempdir"
#    export TMP="$(pwd)/tempdir"
#    export TEMP="$(pwd)/tempdir"
#fi

if [ "$R" = "0" ] ; then
    if [ "${OS}" = "Cygwin" ] ; then
	echo "ssh loopback"
	ssh -p 2628 127.0.0.1 "cd $(pwd) && make" | tee -a ${build_log}
	R=${PIPESTATUS[0]}
    else
	make | tee -a ${build_log}
	R=${PIPESTATUS[0]}
    fi
fi

if [ "$R" = "0" ] ; then
    S="success"
else
    S="build_failed"
fi

if [ -z "${start_time}" ] ;  then
    start_time=`date -u '+%s'`
fi

if [ "${mode}" == "$tb" ] ; then
    cat <<EOF > build.log

tinderbox: administrator: jenkins
tinderbox: buildname: Jenkins_${os}
tinderbox: tree: ${tb_branch}
tinderbox: starttime: ${start_time?}
tinderbox: timenow: `date -u '+%s'`
tinderbox: errorparser: unix
tinderbox: status: $S
tinderbox: END

TinderboxPrint: <a title="jenkins build" href="http://ci.libreoffice.org/job/${JOB_NAME}/${BUILD_NUMBER}/">jenkins on $NODE_NAME</a>

EOF

    cat ${build_log} >> build.log
    rm ${build_log}
fi

exit $R
